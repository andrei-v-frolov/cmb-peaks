! wrapper for tensor inpainting of QU maps
subroutine VARIANT(inpaint_qu)(nside, order, map, mask, mout, apo)
	integer nside, order
	real(XP), dimension(0:12*nside**2-1,1:2) :: map, mout
	real(XP), dimension(0:12*nside**2-1) :: mask, apo
	complex(XP), dimension(:), allocatable :: Z
	optional apo
	
	allocate(Z(0:12*nside**2-1))
	
	Z = cmplx(map(:,1), map(:,2))
	if (present(apo)) call inpaint(nside, order, Z, mask, Z, apo=apo)
	if (.not. present(apo)) call inpaint(nside, order, Z, mask, Z)
	mout(:,1) = real(Z); mout(:,2) = imag(Z)
	
	deallocate(Z)
end subroutine

! wrapper for purified tensor inpainting of QU maps
subroutine VARIANT(inpaint_purified_qu)(nside, order, lmax, map, mask, mout)
	integer nside, order, lmax
	real(XP), dimension(0:12*nside**2-1,1:2) :: map, mout
	real(XP), dimension(0:12*nside**2-1) :: mask
	
	! purification is always done in double precision
	real(DP), allocatable :: P(:,:), R(:,:), M(:)
	allocate(P(0:12*nside**2-1,1:2), R(0:12*nside**2-1,1:2), M(0:12*nside**2-1))
	
	P = map; M = mask
	
	call purify_qu(nside, order, lmax, 3*32-1, 32, 32, P, M, P, R)
	call inpaint_qu(nside, order, R, M, R); mout = P + R
	
	deallocate(P, R, M)
end subroutine
